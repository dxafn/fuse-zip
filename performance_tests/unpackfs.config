
#
# config for unpackfs                                           (jh,09.02.2006)
#

#
#   unpackfs: filesystem with transparent unpacking of archive files
#   Copyright (C) 2005, 2006  Jochen Hepp <jochen.hepp@gmx.de>
#
#   This file is part of unpackfs.
#
#   unpackfs is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   unpackfs is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

#
# format: NAME TYPE MAGIC [EXTENSIONS [COMMAND ARG ...]]
#
# NAME := name of this unpacker entry (e.g. the name of the unpacker)
#
# TYPE := none|-|file|dir
#         none : files matching this type should not be worked with
#         -    : cmd outputs file on standard output
#         file : cmd creates file ${source##*/} in its working directory
#         dir  : cmd creates directory ${source##*/} in its working directory
#
# MAGIC := literal magic string which should be the beginning of the output
#          of the 'file' command - for details see the manpage file(1).
#          No pattern matching is done.  The comparison is case sensitive.
#          Run 'file' on the archive type you want to deal with and copy the
#          begin of the corresponding output verbatim in this config file.
#
# EXTENSIONS := extensions separated by a vertikal bar (|), a comma (,)
#               a space or a tab.
#               (A space or a tab only when enclosed in quotation marks.)
#
# COMMAND := command to execute (with complete path)
#
# ARGS := arguments for the command
#         the special name '$source' will be replaced with the file to work on
#


# ascii - do not search a packer if it is an ascii file
ascii none "ASCII"

# elf - do not search a packer if it is an elf executeable file
elf none "ELF"

# gzip
#gzip       - "gzip compressed data" .gz|.z|_z "/bin/gzip" -dc $source
#gunzip     - "gzip compressed data" .gz|.z|_z "/bin/gunzip" -c $source
#zcat       - "gzip compressed data" .gz|.z|_z "/bin/zcat" $source
#uncompress - "gzip compressed data" .gz|.z|_z "/bin/uncompress" -c $source

# hack to extract .tgz
#tgz dir "gzip compressed data" .tgz "/bin/tar" -xzf $source

# bzip2
#bzip2   -    "bzip2 compressed data" .bz2|.bz "/bin/bzip2" -dc $source
#bunzip2 -    "bzip2 compressed data" .bz2|.bz   "/bin/bunzip2" -c $source
#bzcat   -    "bzip2 compressed data" .bz2|.bz   "/bin/bzcat" $source
#tbz2    file "bzip2 compressed data" .tbz2|.tbz "/bin/bzip2" -dc $source

# tar
#tar dir "POSIX tar archive" .tar "/bin/tar" -xf $source
#tar dir "GNU tar archive"   .tar "/bin/tar" -xf $source
#tar dir "tar archive"       .tar "/bin/tar" -xf $source

# ar
#ar dir "current ar archive"            .a "/usr/bin/ar" -x $source
#ar dir "archive file"                  .a "/usr/bin/ar" -x $source
#ar dir "System V Release 1 ar archive" .a "/usr/bin/ar" -x $source
#ar dir "archive"                       .a "/usr/bin/ar" -x $source

# cpio
#cpio dir "cpio archive" .cpio "/bin/cpio" -i -d -m --force-local -I $source
#cpio dir "byte-swapped cpio archive" .cpio "/bin/cpio" -i -d -m --force-local -I $source
#cpio dir "ASCII cpio archive" .cpio "/bin/cpio" -i -d -m --force-local -I $source
#afio dir "cpio archive" .cpio "/bin/afio" -i $source

# shar
# shar dir "shell archive text" .shar "" $source

# uudecode
# uudecode - "uuencoded or xxencoded text" .uu "" -o /dev/stdout $source

# mime
# mime-munpack dir "XXX mime" .mime "" -q $source

# compress (.Z)
#uncompress -   "compress'd data" .gz|.z|_z "/bin/uncompress" -c $source
# uncompress - "compress'd data" .z|_z     /usr/bin/uncompress.real -c $source


# arj
#arj dir "ARJ archive data" .arj "/usr/bin/arj" x -yi $source

# lha
# lha dir "LHa (2.x) archive data" .lha "" xq $source
# lha dir "LHa 2.x? archive data"  .lha "" xq $source
# lha dir "LHarc 1.x archive data" .lha "" xq $source

# zoo
# zoo   dir "Zoo archive data" .zoo "" xq $source
# unzoo dir "Zoo archive data" .zoo "" -x -j ./ $source

# unzip
unzip dir "Zip archive data" .zip|.jar "/usr/bin/unzip" -qq -n $source

# unzip openoffice
#unzip-oo dir "Zip archive data" .odt|.ott|.ods|.ots|.odp|.otp|.odg|.otg|.odm|.odb|.odf "/usr/bin/unzip" -qq -n $source
#unzip-so dir "Zip archive data" .sxw|.stw|.sxc|.stc|.sxi|.sti|.sxd|.std|.sxg|.sxm "/usr/bin/unzip" -qq -n $source

# unace
# unace dir "ACE compressed archive" .ace "" x -y $source
# unace dir "old ACE/gr binary file" .ace "" x -y $source

# unrar
#unrar dir "RAR archive data" .rar "/usr/bin/unrar" x $source
#rar   dir "RAR archive data" .rar "/usr/bin/rar" x $source

# lzop
# lzop - "lzop compressed data" .lzo "" -dc $source

# ppmd   (note that magic type "data" is stopped later)
# ppmd dir "data" .ppmd "" d -s $source


# deb
#deb dir    "Debian binary package"            .deb "/usr/bin/dpkg" -x $source .
#deb dir    "part of multipart Debian package" .deb "/usr/bin/dpkg" -x $source .
#deb-ar dir "Debian binary package"            .deb "/usr/bin/ar" -x $source
#deb-ar dir "part of multipart Debian package" .deb "/usr/bin/ar" -x $source

# hack to extract rpm
#rpm2cpio2dir dir "RPM" .rpm /bin/sh -c '/usr/bin/rpm2cpio "$1" | /bin/cpio -i -d -m' rpm2cpio2dir $source


# cab
#cabextract dir "Microsoft Cabinet file"     _|.cab|.exe "/usr/bin/cabextract" -q -s $source
#cabextract dir "InstallShield Cabinet file" .cab|.exe "/usr/bin/cabextract" -q -s $source

# mscompress/msexpand   (note that magic type "data" is stopped later)
# msexpand file "data" _ "" $source


# unshield
# unshield dir "InstallShield Cabinet file" .cab "" x $source

# orange
# orange dir "InstallShield Cabinet file" .cab "" $source

# tnef
# tnef dir "Transport Neutral Encapsulation Format" .tnef "" -f $source

# macunpack
# macunpack dir "XXX macunpack" .mac "" $source


# msdos (maybe a self-extractor)
# "MS-DOS executable (EXE), OS/2 or MS Windows"
#arj dir "MS-DOS executable (EXE), OS/2 or MS Windows" .exe "/usr/bin/arj" x -yi $source
#unzip dir "MS-DOS executable (EXE), OS/2 or MS Windows" .exe "/usr/bin/unzip" -qq -n $source
# unace dir "MS-DOS executable (EXE), OS/2 or MS Windows" .exe "" x -y $source
#unrar dir "MS-DOS executable (EXE), OS/2 or MS Windows" .exe "/usr/bin/unrar" x $source

# msdos - do not search a packer further if it is an executeable file
msdos none "MS-DOS executable (EXE), OS/2 or MS Windows" .exe


# data - do not search a packer further if it is an unknown data file
data none "data"


# shar
# to execute unknown files with the shell is a security hole
### shar-sh dir "shell archive text" .shar /bin/sh $source


# --- end ---

